
fn main() void = {
    #use("@/lib/sys/fs.fr");
    mine_own_bytes_perhaps :: read_entire_file_or_crash(ast_alloc(), "hello.wasm");
    it := mine_own_bytes_perhaps;
    import("@/examples/dump_wasm.fr")'dump(it);
}

fn disassemble(p: *u8, l: i64) void #export = {
    push_zeroed_dynamic_context {
        c := context(DefaultContext);
        temporary_allocator: ArenaAlloc = init(page_allocator, 1.shift_left(10));
        set_temporary_allocator(temporary_allocator&);
        c.general_allocator = page_allocator;
        c.panic_hook = print_and_exit1;
        import("@/examples/dump_wasm.fr")'dump(ptr = p, len = l);
    };
}

#use("@/lib/sys/process.fr");

fn allocate(l: i64) *u8 #export = {
    OS[].it = .macos;
    page_allocator.alloc_uninit(u8, l).as_ptr()
}
