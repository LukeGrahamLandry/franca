#test(aarch64)
fn main(canary: i64) i64 = {
    // Found with collections.fr:split, narrowed down to resizing a list. then to memcpy when something is larger than one slot. then to calling set. 
    // Worked when my_set is #inline but segfault if not. So its a spilling problem. 
    fn memcpy_wide_values() Unit = {
        T :: Str;
        S :: Slice(T);
        
        #noinline
        fun my_set(var self: S, i: i64, v: T) Unit = {
            self.index(i)[] = v; 
        }
        
        #noinline
        fn my_memcpy(dest: S, src: S) Unit = {
            var i = 0;
            while(fn = lt(i, src.len())) {|
                src_ptr := src.index(i);
                dest.my_set(i, src_ptr[]);
                i = i.add(1);
            };
        }
    
        var a: S = ("a", "a")!slice;
        var b: S = ("b", "b")!slice;
        my_memcpy(a, b);
    }
    
    memcpy_wide_values();
    
    canary
}
