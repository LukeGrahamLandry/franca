// TODO: this doesn't work on the interpreter because it can't handle real pointers. 
@test(aarch64)
fn main(canary: i64) i64 = {
    // TODO: need to mul 8 because its measured in stack slots instead of bytes. 
    let an_int: VoidPtr = malloc(size_of(i64).mul(8));
    let an_int: *i64 = an_int;
    an_int[] = 314159;
    assert_eq(an_int[], 314159);
    free(@as(VoidPtr) an_int);
    
    let many: VoidPtr = malloc(size_of(i64).mul(8).mul(10));
    let many: *i64 = many;
    let arr: Slice(i64) = slice(many, 10);
    enumerate(arr, fn(i: i64, ptr: *i64) Unit = {
        ptr[] = i;
    });
    var sum = 0;
    foreach(arr, fn(v: i64) Unit = {
        sum = sum.add(v);
    });
    assert_eq(sum, 45);
    free(@as(VoidPtr) many);
    
    canary
}
