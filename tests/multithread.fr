
fn make_threads() #test = {
    if !query_context_is_implicit() {
        println("skip!");
        return();
    };
    
    A :: @static(i64) 0;
    B :: @static(i64) 0;
    C :: @static(i64) 0;
    callee :: fn(userdata: *i64) void = {
        assert_eq(userdata[], 1234);
        assert_eq(context(DefaultContext)[].thread_index, 1);
        while => A[] == 0 {
            usleep(1);
        };
        println("second");
        B[] = int_from_rawptr(get_dynamic_context());
    };
    
    C[] = 1234;
    assert_eq(context(DefaultContext)[].thread_index, 0);
    i64.start_thread(callee, C);
    assert_eq(context(DefaultContext)[].thread_index, 0);
    assert_eq(B[], 0);
    println("first");
    A[] = int_from_rawptr(get_dynamic_context());
    while => B[] == 0 {
        usleep(1);
    };
    println("third");
    @assert_ne(A[], B[]);
}
