fn main(_input: i64) i64 = {

const P: Type = (Any, Any);

// TODO: better error message if you forget to put the @comptime
@comptime
fn dup(T: Type) Fn(T, P) = {
    let f = fn(value: T) (T, T) = (value, value);
    f
}

const P_i64: Type = (i64, i64);
const dup_i64: Fn(i64, P_i64) = dup(i64);
let one_one = dup_i64(1);
assert_eq(1, get_i(one_one!addr, 0));
assert_eq(1, get_i(one_one!addr, 1));

const P_ty: Type = (Type, Type);
const dup_ty: Fn(Type, P_ty) = dup(Type);
let tt = dup_ty(Unit);
assert_eq(Unit, get_i(tt!addr, 0));
assert_eq(Unit, get_i(tt!addr, 1));

dup_ty(1)!assert_compile_error;
dup_i64(Unit)!assert_compile_error;

_input
}