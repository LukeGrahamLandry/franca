// This is a test of examples: elf_loader/macho_loader and dump_elf/dump_macho. 
// TODO: for now it mostly tests the native target (not cross compiling)

main :: fn() void = {
    macos := query_current_os() == .macos;
    loader := @if(macos, "examples/macho_loader.fr", "examples/elf_loader.fr");
    dump := @if(macos, "examples/dump_macho.fr", "examples/dump_elf.fr");
    franca := get_executable_path(temp());
    
    exe := open_temp_file();
    
    {  // === dynamic .fr ===
    // TODO: can't do this on linux because i rely on franca_runtime_init to align the stack
    // sh(@slice(franca, "backend/meta/qbe_frontend.fr", "backend/test/hello.ssa", "-o", exe&.s_name()));
    sh(@slice(franca, "examples/default_driver.fr", "build", "examples/toy/hello2.fr", "-o", exe&.s_name()));
    if macos {  // todo: "why does this work on my linux but not github's linux"
        a := sh(@slice(franca, loader, exe&.s_name()));
        @assert_eq(a, "Hello World!\n");
    }
    text := sh(@slice(franca, dump, exe&.s_name()));
    if macos {
        @assert(!text.contains("imports_count = 0") && text.contains(") _write") && text.contains(") _exit"));
    } else {
        @assert(text.contains("Dynamic") && text.contains("Interp"), "expected dynamic executable:\n%", text);
    }
    };
    
    {  // === static .fr ===
        sh(@slice(franca, "examples/default_driver.fr", "build", "examples/toy/hello2.fr", "-o", exe&.s_name(), 
            "-syscalls", "-os", "linux"));
        //if !macos {  // todo: "why does this work on my linux but not github's linux"
        //    a := sh(@slice(franca, loader, exe&.s_name()));
        //    @assert_eq(a, "Hello World!\n");
        //};
        text := sh(@slice(franca, "examples/dump_elf.fr", exe&.s_name()));
        @assert(!text.contains("Dynamic") && !text.contains("Interp"), "expected static executable:\n%", text);
    };
}

sh :: import("@/examples/testing.fr").hush;
#use("@/backend/lib.fr");
#use("@/lib/sys/fs.fr");
