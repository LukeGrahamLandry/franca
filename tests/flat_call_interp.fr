// TODO: write_int_copy can't handle GetNativeFnPtr yet. 

@test(interp)
fn main(canary: i64) i64 = {
    // Call a function in the compiler
    let res = test_flat_call_fma(5, 2, 3);
    assert_eq(res, 13);
    
    // Same but declared in a different way internally. 
    let res = test_flat_call_fma2(15, 2, 3);
    assert_eq(res, 33);
    
    @flat_call @ct
    fn test_flat_call_fma_reverse(a: i64, b: i64, c: i64) i64 = {
        a.mul(b).add(c)
    }
    
    // TODO: This normal call is needed to make sure its compiled. creating a !fn_ptr should do that too. 
    // Call a function declared here.
    let out = test_flat_call_fma_reverse(4, 5, 2);
    assert_eq(out, 22);
    
    canary
}
