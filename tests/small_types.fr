
#use_cranelift #log_cl 
#test 
fn load_store_u8() = {
    // a word with lsb = 1
    a := 257;
    ptr: *u8 = a&;  // pointer to lsb
    
    // now load lsb and put it in word sized stack slot. so this should be a truncation of a.
    // but we know the var is type u8 so loads should be 1 byte, so don't have to zero the slot. 
    b := ptr[]; 
    assert_eq(@as(i64) b, 1);
    
    //assert_eq(a, 257); // read the whole word
    //ptr[] = @as(u8) 2; // store lsb = 2
    //assert_eq(a, 258); // read the whole word
    
    //assert_eq(u8.size_of(), 1);
}
