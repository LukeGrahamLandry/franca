// - discovered when writing codemap :fall_through_never
#test_broken
fn fall_through_never() = {
    want_zero :: fn(i: i64) Str = {
        ret :: @return;
        if(i.eq(0)) {|
            ret("zero");
        };
        panic("expected zero")
    };
    
    :: assert_eq(Str);
    assert_eq("zero", want_zero(0));
}

// - ffi::c::call doesn't handle returning pairs when size isn't 16 bytes.
#test_broken
fn return_small_pair_const() = {
    get_pair :: fn() Ty(u32, u32) = {
        (1.trunc(), 2.trunc())
    };
    a :: get_pair();
    assert_eq(a._0, 1.trunc());
    assert_eq(a._1, 2.trunc());
}
