//! these ones aren't crippling bugs but its pretty cringe that i can't do it. 

#test_broken
fn tail_stmt(canary: i64) i64 = {
    // here it doesn't return the value from the function, but since its unit, it doesn't matter.
    fn do_nothing(a: i64) Unit = {
        if(a.eq(0), => unit, => do_nothing(a.sub(1)));
    }
    
    N :: 999999;
    do_nothing(N);
    
    canary
}

#test_broken
fn fields_any_order() = {
    A :: @struct(a: i64, b: i64);
    
    a: A = (b = 1, a = 2);
    assert_eq(a&.a[], 2);
    assert_eq(a&.b[], 1);
}

#test_broken
fn tail_loop(canary: i64) i64 = {
    fn tail_while(const cond: Fn(Unit, bool), const body: Fn(Unit, Unit)) Unit = {
        if(cond()){()Unit|
            body();
            tail_while(cond, body);
        }
    }
    
    i := 0;
    tail_while(=> i.lt(100)) {|
        i += 1;
    };
    assert_eq(i, 100);
    
    canary
}

#test_broken fn self_referencial_type() = {
    L: Type : @struct(next: ?*L, data: i64);
    
    fst: L = (next = (None = unit), data = 123);
}