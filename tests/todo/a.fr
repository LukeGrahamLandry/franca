fn first_ref_os() #test = {
    S :: @struct {
        foo :: 123;
        bar :: 246;
        fn what_about_here1223334444(a: i64) i64 = a * S.foo;
    };
    
    assert_eq(what_about_here1223334444(2), S.bar);
}

// Currently this works if you just have a := Bar (because the scope is resolved as normal). 
// But it would be nice if the scope was created and bound to the variable before starting to evaluate the fields. 
fn const_field_unordered() #test = {
    A :: @rec @struct {
        a := A.Bar;
        Bar :: 123;
    };
    a: A = ();
    assert_eq(a.a, 123);
}
