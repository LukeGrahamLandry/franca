
fn simple_context() #test = {
    fn check_thread_index(expect: i64) void = {
        assert_eq(context(DefaultContext)[].thread_index, expect);
    }
    // TODO: change the outer one to just `push_dynamic_context` once we have something outside main that sets it up. 
    push_zeroed_dynamic_context {
        starting_thread_index := context(DefaultContext)[].thread_index;
        push_dynamic_context {
            context(DefaultContext)[].thread_index = 123;
            check_thread_index(123);
            push_dynamic_context {
                context(DefaultContext)[].thread_index = 456;
                check_thread_index(456);
            };
            check_thread_index(123);
        };
        check_thread_index(starting_thread_index);
        push_zeroed_dynamic_context {
            check_thread_index(0);
        };
        check_thread_index(starting_thread_index);
    };
}

fn check_context() #test = {
    foo := query_context_is_implicit();
    esc :: fn(b: bool) void #noinline = ();
    esc(foo);
    //@println("implicit: %", foo);
}
