# this doesn't check that it's actually atomic. 
# it just tests that the comparison to the existing value works. 

export function w $main() {
@start
    call $f(l 5)
    retw 0
}

function $f(l %five) {
@start
    %p =l alloc8 8
    storel 10, %p
    
    # failed cas doesn't store
    cas0 %p
    %old =l cas1 999, 3
    call $check1(l %p, l 10)
    call $check2(l 10, l %old)
    
    # successful cas does store
    cas0 %p
    %old =l cas1 10, 3
    call $check1(l %p, l 3)
    call $check2(l 10, l %old)
    
    # encoding with non-constant 
    %three =l sub %old, 7
    cas0 %p
    %old =l cas1 %three, %five
    call $check1(l %p, l 5)
    call $check2(l 3, l %three)
    
    # encoding with address of a stack slot
    cas0 %p
    %old =l cas1 5, %p
    call $check1(l %p, l %p)
    call $check2(l 5, l %old)
    
    ret
}

function $check1(l %p, l %value) {
@start
    %v =l load %p
    call $check2(l %v, l %value)
    ret
}

function $check2(l %a, l %b) {
@start
    %c =l ceql %a, %b
    jnz %c, @ok, @fail
@ok
    ret
@fail 
    hlt
}
