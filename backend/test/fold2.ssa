# These should each fold away to just returning a constant. 

export
function w $f1() {
@start
    %a =w add 1, 2
    %b =w add %a, 3
    %c =w ceqw %b, 6
    jnz %c, @yes, @no  # true
@yes
	ret 10
@no
	ret 20
}

export
function w $f2() {
@start
    %a =w add 1, 2
    %c =w ceqw %a, 3
    jnz %c, @yes, @no  # true
@yes
    jmp @end
@no
    jmp @end
@end
    %b =w phi @yes 15, @no 30
	ret %b
}

# This is the situation helped by `if (!deadedge(p->blk[a]->id, n))` in `visitphi` 
# (TODO: gvn doesn't fold the phi all the way)
export
function w $f3(w %a, w %b) {
@start
    %c =w copy 1
    %d =w ceqw %c, 2
    jnz %d, @yes, @no  #false
@yes
    jmp @end
@no
    jmp @end
@end
    %e =w phi @yes %a, @no 7  # 7
    %f =w add %e, 1 
	ret %f
}

# >>> driver
# extern int f1(), f2(), f3(int, int);
# int main() { return !(f1() == 10 && f2() == 15 && f3(1, 2) == 8); }
# <<<
