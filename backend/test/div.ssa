# signed division rounds towards 0. 
# make sure this isn't broken by strength reduction on constant powers of two. 

export
function l $main(l %a) {
@start
    %a =l call $const_div(l -999)
    %bad0 =l cnel %a, -249
    %b =l call $const_div(l 999)
    %bad1 =l cnel %b, 249
    
    %c =l call $const_rem(l -999)
    %bad2 =l cnel %c, -3
    %d =l call $const_rem(l 999)
    %bad3 =l cnel %d, 3
    
    %e =l call $just_sel(w 0, l 123, l 456)
    %bad4 =l cnel %e, 456
    %f =l call $just_sel(w 1, l 123, l 456)
    %bad5 =l cnel %f, 123
    
    %bad6 =l call $fold_sel(l 0, l 1)
    sel0 1
    %bad7 =l sel1 0, 1
    
    %bad =l or %bad0, %bad1
    %bad =l or %bad, %bad2
    %bad =l or %bad, %bad3
    %bad =l or %bad, %bad4
    %bad =l or %bad, %bad5
    %bad =l or %bad, %bad6
    %bad =l or %bad, %bad7
    ret %bad
}

function l $const_div(l %a) {
@start
    %b =l div %a, 4
    ret %b
}

function l $const_rem(l %a) {
@start
    %b =l rem %a, 4
    ret %b
}

# TODO: move this elsewhere
function l $just_sel(w %cond, l %t, l %f) {
@start
    sel0 %cond
    %out =l sel1 %t, %f
    ret %out
}

function l $fold_sel(l %t, l %f) {
@start
    sel0 1
    %out =l sel1 %t, %f
    ret %out
}
