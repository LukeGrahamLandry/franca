# on x64 this makes sure you didn't forget endbr64

function l $add_two(l %arg) {
@start
    %c =l add %arg, 2
    ret %c
}

export
function w $main() {
@start
    # the direct calls will be inlined, 
    # so if the inlining loop if off by one it will skip the following par instruction,
    # and we won't notice the function had to be emitted for the dynamic call dispite being inlinable. 
    %_ =l call $add_two(l 0)  
    %a =l call $call_it(l $add_one, l -1)
    %_ =l call $add_two(l 0) 
    %b =l call $call_it(l $add_two, l -2)
    %c =l add %a, %b
    ret %c
}

function l $call_it(l %func, l %arg) {
@start
    %b =l call %func(l %arg)
    ret %b
}

function l $add_one(l %arg) {
@start
    %c =l add %arg, 1
    ret %c
}
