# sanity checks for env calls

export function l $earg(l %a, l %b) {
@start
	%r1 =l call $epar(env %a, l %b)  # will be inlined
	# okay to call a regular function
	# with an env argument
	%r2 =l call $labs(env 113, l %r1)
	
	%garbage =l call $epar(l %r2)       # this would compile if it wasn't inlined so it should compile now
	%b2 =l call $no_epar(env %a, l %b)  # will be inlined and we have to drop the env arg
	
	ret %r2
}

function l $no_epar(l %i) {
@start
	%x =l add %i, %i
	ret %x
}

function l $epar(env %e, l %i) {
@start
	%x =l add %e, %i
	ret %x
}

# >>> driver
# extern long earg(long, long);
# int main(void) { return !(earg(2, -44) == 42); }
# <<<
