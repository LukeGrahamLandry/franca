Elf :: @rec @struct(
    Header :: @rec @struct(
        magic: u32 = 0x464c457f, 
        class: u8 = 2, // 64-bit
        data: u8 = 1, // little endian
        header_version: u8 = 1,  // "current version"... as of 1997 (?)
        os_abi: u8 = 0,  // no extensions OR system-V depending who you ask (?)
        _pad: i64 = 0,
        type: Elf.Type,
        machine: Elf.Machine,
        version: u32 = 1,
        entry: i64,
        program_header_off: i64,
        section_header_off: i64,
        flags: u32,
        ehsize: u16,
        program_header_entsize: u16 = size_of(Elf.ProgramHeader),
        program_header_num: u16,
        section_header_entsize: u16 = size_of(Elf.SectionHeader),
        section_header_num: u16,
        section_header_names_index: u16,
    ),
    Type :: @rec @enum(u16) (
        None, Relocatable, Executable, Dynamic,
    ),
    Machine :: @rec @enum(u16) (
        none = 0, amd64 = 0x3E, arm64 = 0xB7,
    ),
    ProgramHeader :: @rec @struct(
        type: Elf.SegmentType,
        prot: u32,
        offset: i64,
        vaddr: i64, 
        paddr: i64,
        file_size: i64,
        mem_size: i64,
        align: i64,
    ),
    SegmentType :: @rec @enum(u32) (
        Null = 0, 
        Load = 1, 
        Dynamic = 2, 
        Interp = 3, 
        Note = 4, 
        Shlib = 5, 
        Phdr = 6, 
        Tls = 7,
        EHFrame = 0x6474e550,
        Stack = 0x6474e551,
        Relro = 0x6474e552,
    ),
    SectionHeader :: @rec @struct(
        name: u32,
        type: Elf.SectionType, 
        flags: i64,  // bit set of Elf.SectionFlag
        addr: i64,
        offset: i64, 
        size: i64,
        link: u32,
        info: u32, 
        addr_align: i64,
        ent_size: i64,
    ),
    SectionType :: @rec @enum(u32) (
        Null, ProgramBits, SymbolTable, StringTable, RelocAddend, 
        Hash, Dynamic, Note, Bss, RelocNoAddend, Lib, DynSymbolTable,
        InitArray, FiniArray, PreInitArray, Group, SymTabShIndex, 
    ),
    SectionFlag :: @rec @enum(i64) (
        Write, Alloc, Exec, _Pad, Merge, Strings, InfoLink, LinkOrder, OsNonConforming, Group, Tls,
    ),
    Symbol :: @rec @struct(
        name: u32,
        info: u8,
        other: u8,
        section_header_index: u16,
        value: i64,
        size: i64,
    ),
);
