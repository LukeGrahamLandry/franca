Vm :: @struct(
    stack: RawList(SValue),
    intern: StringPool,
    codemap: CodeMap,
    globals_lookup: RawHashMap(Symbol, i64),
    globals: RawList(SValue),
    globals_debug_names: RawList(Symbol),
    gpa: Alloc,
);

SValue :: *ObjectHeader;

ClassVTable :: @rec @struct(
    super: *ClassVTable,
    methods: RawHashMap(Symbol, *CodeBody),
    name: Symbol,
);

ObjectHeader :: @rec @struct(
    vtable: *ClassVTable,
    fields: *RawHashMap(Symbol, SValue),
);

Operation :: @rec @tagged(
    GetField: Symbol,
    SetField: Symbol,
    GetLocal: i64,
    SetLocal: i64,
    GetGlobal: i64,
    SetGlobal: i64,
    MessageSend: @struct(selector: Symbol, count: u32),
    ReturnFromMethod,
    ReturnFromBlock,
    Pop,
    Dup,
    MakeSymbol: Symbol, // TODO: do this in the compiler
    DebugLoc: Span,
    CreateBlock: *CodeBody,
);

CodeBody :: @struct(
    ops: RawList(Operation) = empty(),
    local_names: RawList(Symbol) = empty(),
    parameter_count := 0,
    selector := zeroed(Symbol),
);
