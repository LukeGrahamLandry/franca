
pub $type u8
pub $type u32
pub $type u64
pub $type bool = u8[..=1]

// pub const true: bool = 1
// pub const false: bool = 0

pub status "$short read"

pub struct io_reader?(
    data: slice base.u8,
    wi: base.u64,
    ri: base.u64,
    pos: base.u64,
    closed: base.bool,
)

// TODO: this will generate much worse code than real wuffs which has this as a magic intrinsic in the compiler
//       should just do that instead. and then i probably don't have to deal with coroutines that also
//       have a return value. 
pub func io_reader.read_u8?() base.u8 {
    while true {
        if this.ri < this.data.length() {
            this.ri = this.ri + 1
            return this.data[this.ri - 1]
        }
        yield? "$short read"
    }
}
