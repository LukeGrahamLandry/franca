//! Transpile BrainFuck to C.
fn convert(code: Str) List(u8) = {
    out: List(u8) = list(code.len().mul(5), libc_allocator); 
	out&.push_all("#include <stdio.h>\nint main(){ \nunsigned char mem[30000]; unsigned char *p = mem;\n");
	
	for code { (c: u8) | @switch(c) {
        @case(Bf.Inc) => out&.push_all("(*p)++;");
        @case(Bf.Dec) => out&.push_all("(*p)--;");
        @case(Bf.Right) => out&.push_all("p++;");
        @case(Bf.Left) => out&.push_all("p--;");
        @case(Bf.Output) => out&.push_all("putchar(*p);");
        @case(Bf.Input) => out&.push_all("*p = getchar();");
        @case(Bf.Open)  => out&.push_all("while(*p){");
        @case(Bf.Close) => out&.push_all("}");
        @default()      => ();
    }};

	out&.push_all("\nreturn 0;}");
	out
}

fn main() void = {
    // From https://esolangs.org/wiki/Brainfuck#Hello,_World!
	code: Str = "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.";
    out := convert(code);
	out := out&.items();
	println(out);
}
