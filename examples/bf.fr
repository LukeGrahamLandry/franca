//! Transpile BrainFuck to C.
fn convert(code: Str) List(u8) = {
    var out: List(u8) = list(code.len().mul(5)); 
	out&.push_all("#include <stdio.h>");
	out&.push(@as(u8) 10); // TODO: \n
	out&.push_all("int main(){ unsigned char mem[30000]; unsigned char *p = mem;");
	
	code.for { (c: u8) () | @switch(c) {
        @case(Bf.Inc) => out&.push_all("(*p)++;");
        @case(Bf.Dec) => out&.push_all("(*p)--;");
        @case(Bf.Right) => out&.push_all("p++;");
        @case(Bf.Left) => out&.push_all("p--;");
        @case(Bf.Output) => out&.push_all("putchar(*p);");
        @case(Bf.Input) => out&.push_all("*p = getchar();");
        @case(Bf.Open) => out&.push_all("while(*p){");
        @case(Bf.Close) => out&.push_all("}");
        @default() fn(c: i64) => ();
    }};

	out&.push_all("return 0;}");
	out
}

fn main(canary: i64) i64 = {
    // From https://esolangs.org/wiki/Brainfuck#Hello,_World!
	var code: Str = "++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.";
    var out = convert(code);
	let out = out&.items();
	println(out);
	canary
}
