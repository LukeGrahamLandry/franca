
fn driver(vtable: *ImportVTable) void = {    
    opts := vtable.default_build_options();
    //opts.comptime_jit = .Cranelift;
    
    src := "#include_std(\"lib/core.fr\");".clone(temp());
    @fmt(src&, "fn hello0() i64 #noinline = 1;\n");

    size := 1000;
    
    range(1, size) { i | 
        @fmt(src&, "fn hello%(i: i64) i64 = i + hello0() ", i);
        range(1, i) { i |
            @fmt(src&, "+ %", i);
        };
        @fmt(src&, ";\n");
    };
    comp := vtable.new_with_src(src.items(), opts);
    ctx := vtable.with(comp);
    println("start doing calls");
    old := 0;
    range(1, size) { i | 
        name := (@format("hello%", i) temp()).items();
        fid := ctx.get_unique_named(name).unwrap();
        ptr := ctx.get_jitted(fid);
        ptr := assume_types_fn(Arg = void, Ret = i64, ptr = ptr);
        if i.mod(10) == 0 {
            @println("%. %", i, ptr());
        };
    };
    {vtable.destroy_compiler}(ctx.data); 
}
