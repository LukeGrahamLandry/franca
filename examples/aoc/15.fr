fn main() void = {
    input := read_file_from_last_arg();
    lines := input.split("\n", temp()).items();
    w := lines[0].len;
    h := lines.index_of("").unwrap();
    
    DIR :: @const_slice(
        (0, 1),
        (0, -1),
        (1, 0),
        (-1, 0),
    );
    
    i := input.index_of("@".ascii()).unwrap();
    input[i] = ".".ascii();
    x, y := i.div_mod(w + 1);
    
    for lines.rest(h) { moves |
        for moves { m |
            continue :: local_return;
            
            //lines[y][x] = "@".ascii();
            //println(input.slice(0, h * (w + 1)));
            //@println("% %", x, y);
            //println(@as(Str) (ptr = m&, len = 1));
            //lines[y][x] = ".".ascii();
            
            dx, dy := @switch(m) {
                @case("^".ascii()) => (0, -1);
                @case(">".ascii()) => (1, 0);
                @case("<".ascii()) => (-1, 0);
                @case("v".ascii()) => (0, 1);
                @default => continue();
            };
            x2, y2 := (x + dx, y + dy);
            get :: fn(xx, yy) => lines[yy][xx];
            
            
            while => get(x2, y2) != ".".ascii() {
                if get(x2, y2) == "#".ascii() { 
                    continue();
                };
                x2 += dx;
                y2 += dy;
            };
            old := lines[y][x];
            while => x != x2 || y != y2 {
                lines[y2][x2] = lines[y2 - dy][x2 - dx];
                x2 -= dx;
                y2 -= dy;
            };
            lines[y][x] = ".".ascii();
            x += dx;
            y += dy;
        };
    };
    //lines[y][x] = "@".ascii();
    //println(input.slice(0, h * (w + 1)));
    
    part1 := 0;
    range(0, h) { y |
        range(0, w) { x |
            if lines[y][x] == "O".ascii() {
                part1 += 100 * y + x;
            };
        };
    };
    println(part1);
    
}

#use("@/lib/sys/fs.fr");
