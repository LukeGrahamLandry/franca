fn main() void = {
    DIR :: @const_slice(
        (0, 1),
        (0, -1),
        (1, 0),
        (-1, 0),
    );
    
    fn walk(lines: [][]u8, c: u8, x: i64, y: i64, area: *i64, perimeter: *i64, hit: []DynamicBitSet) void = {
        w, h := (lines[0].len, lines.len);
        enumerate DIR { d, dir |
            dx, dy := dir[];
            x2 := x + dx;
            y2 := y + dy;
            i  := y*w + x;
            i2 := y2*w + x2;
            if !hit[d]&.get_set(i) {
                if x2 >= 0 && y2 >= 0 && x2 < w && y2 < h {
                    if !hit[4]&.get(i2) {
                        c2 := lines[y2][x2];
                        if c2 != c {
                            perimeter[] += 1;
                        } else {
                            hit[4]&.set(i2);
                            area[] += 1;
                            walk(lines, c, x2, y2, area, perimeter, hit);
                        };
                    };
                } else {
                    perimeter[] += 1;
                };
            };
        };
    }
    
    input := read_file_from_last_arg();
    ::List(Str);
    lines := input.split("\n", temp()).items();
    w, h := (lines[0].len, lines.len);
    
    hit := temp().alloc_uninit(DynamicBitSet, 6); 
    each hit { hit |
        hit[] = empty(temp());
        hit.reserve(w*h);
    };
    counted: DynamicBitSet = empty(temp());
    counted&.reserve(w*h);
    part1 := 0;
    part2 := 0;
    range(0, h, fn(y) => range(0, w) { x | 
        i := y*w + x;
        if !counted&.get(i) {
            hit[4]&.set(i);  
            c := lines[y][x];
            perimeter := 0;
            area  := 1;
            sides := 0;  // TODO
            walk(lines, c, x, y, area&, perimeter&, hit);
            
            counted&.set_all_from(hit[4]&);
            each hit { hit | 
                hit.unset_all();
            };
            part1 += area * perimeter;
            part2 += area * sides;
        };
    });
    println(part1);
    println(part2);
}

#use("@/lib/collections/bit_set.fr");
#use("@/lib/sys/fs.fr");
