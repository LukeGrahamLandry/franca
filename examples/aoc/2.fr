// https://adventofcode.com/2024/day/2
// read a text file. each line is a list of numbers. how many safe lines? 
// part1: safe if always increasing or decreasing and always by 1, 2, or 3. 
// part2: safe if one number can be removed to make it meet old definition. 

fn main() = {
    input := read_file_from_last_arg();
    lines := input.split("\n", temp());    
    safe := 0;
    safe2 := 0;
    for lines { line |
        continue :: local_return;
        parts := line.split(" ", temp());
        nums := i64.list(parts.len, temp());
        for parts { n |
            nums&.push(parse_int(n));
        };
        if is_safe(nums.items()) {
            safe += 1;
        };
        range(0, nums.len) { i |
            old := nums&.ordered_remove(i).unwrap();
            if is_safe(nums.items()) {
                safe2 += 1;
                continue();
            };
            nums&.insert(i, old);
        };
        
    };
    println(safe);
    println(safe2);
}

fn is_safe(nums: []i64) bool = {
    inc := true;
    last := nums[0];
    range(1, nums.len) { i | 
        n := nums[i];
        diff := abs(last - n);
        if diff < 1 || diff > 3 {
            return(false);
        };
        if n > last {
            if !inc {
                return(false);
            };
        } else {
            if i != 1 && inc {
                return(false);
            };
            inc = false
        };
        last = n;
    };
    true
}

#use("@/lib/sys/fs.fr");
