fn main() void = {
    input := read_file_from_last_arg();
    ::List(Str);
    lines := input.split("\n", temp()).items();
    w, h := (101, 103);
    s := @slice(0, 0, 0, 0);
    for lines { line |
        continue :: local_return;
        n := parse_all_ints(line);
        x, y, dx, dy := (n[0], n[1], n[2], n[3]);
        mmod :: fn(a, b) => { c := mod(a, b); if(c < 0, => b+c, => c) };
        x = mmod(x + dx * 100, w);
        y = mmod(y + dy * 100, h);
        i := @if_else {
            @if(x < w / 2 && y < h / 2) => 0;
            @if(x > w / 2 && y < h / 2) => 1;
            @if(x < w / 2 && y > h / 2) => 2;
            @if(x > w / 2 && y > h / 2) => 3;
            @else => continue();
        };
        s[i] += 1;
    };
    println(s[0] * s[1] * s[2] * s[3])
}

fn parse_all_ints(s: Str) []i64 = {
    out := i64.list(temp());
    i := 0;
    while => i < s.len {
        while => i < s.len && !s[i].is_ascii_digit() {
            i += 1;
        };
        start := i;
        while => i < s.len && s[i].is_ascii_digit() {
            i += 1;
        };
        n := s.slice(start, i).parse_int();
        if start != 0 && s[start - 1] == "-".ascii() {
            n *= -1;
        };
        out&.push(n);
    };
    out.items()
}

#use("@/lib/sys/fs.fr");
