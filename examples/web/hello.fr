// THIS IS UNFINISHED
// TODO: also i broke emit_export_wrapper when i changed CodegenTask.Bounce

// TODO: make it easy to setup and environment that's not on your stack  
//       so you don't have to do everything from inside your main function. 
fn main() void #export = {
    push_zeroed_dynamic_context {
        c := context(DefaultContext);
        temporary_allocator: Arena.Allocator = init(page_allocator, 1.shift_left(20));
        set_temporary_allocator(temporary_allocator&);
        c.panic_hook = print_and_exit1;
        c.global = @static(GlobalFrancaRuntime);
        c.global.next_thread_id = 1;  // :ThreadIdStartsAtOne
        A :: import("@/lib/alloc/fixed_block.fr").BlockAlloc;
        general_allocator: A = init(page_allocator);
        c.general_allocator = general_allocator&.borrow();
        throw := bit_cast_unchecked(i64, @FnPtr() void, 0);
        throw();
    };
}

:: Sapp.Wgpu;  // force the #export functions to be referenced. TODO: make this more explicit. 
#include_std("graphics/lib.fr");
// franca examples/default_driver.fr build examples/web/hello.fr -o examples/web/target/hello.wasm -arch wasm32 -dynamiclib -keep-names
