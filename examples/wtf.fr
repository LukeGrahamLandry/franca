//! cranelift can't cope with this but only on aarch64, x86 is fine.

string_with_newline :: fn() Str = "\n";

fn main() void = {
    debug_log_int(1);
    print("start");
    run();
    s := string_with_newline();
    assert_eq(true, true);
}

fn run() void #inline = {
    loop {|
        ccc: u8 = 0;
        mem: Slice(u8) = (ptr = ccc&, len = 0);
        c := 0;
        @switch(c) {
            @case(0) => { };
            @case(1) => { };
            @case(2) => { };
            @case(3) => { };
            @case(4) => { };
            @case(5) => { };
            @case(6) => {
                let p: *u8 = mem.index(0);
                p[] = mem.get(0);
            };
            @case(7) => {
                ptr := 0;
                cc := true;
                if(cc) {|
                    count := 1;
                    while(=> count.ne(0)) {|
                        let c: i64 = @as(u8) mem.get(0);
                        if(c.eq(0)) {|
                            count = count;
                        }{| if(c.eq(0)) {|
                            count = count.add(1);
                        }};
                    };
                };
            };
            @default() fn(c: i64) => ();
        };
    };
}
