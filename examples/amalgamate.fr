// Concatenates all source files in the franca repository into one. 

main :: fn() void = {
    files := collect_paths(".");
    bytes := collect_bytes(files);
    write_entire_file_or_crash("a.txt", bytes);
    @println("a.txt\nsha256: %\nsize: %", Sha256'hex(bytes), bytes.len);
}

collect_bytes :: fn(files: []Str) Str = {
    names := u8.list(temp());
    contents := u8.list(temp());
    @fmt(names&, "AMALGAMATE v1 %\n", files.len);
    for files { path |
        start := contents.len;
        read_and_push_or_crash(contents&, path);
        // don't put the start offset so you don't get a chain of diffs if you change one file
        @fmt(names&, "% % %\n", contents.len - start, path.len, path);
    };
    names&.push_all(contents.items());
    names.items()
}

collect_paths :: fn(root: Str) []Str = {
    extensions := @const_slice(".fr", ".md", ".ssa", ".c", ".h");
    files := Str.list(temp());
    dirs := Str.list(temp());
    dirs&.push(root);
    while => dirs&.pop() { s |
        prev_f, prev_d := (files.len, dirs.len);
        (walk_directory_unordered(as_cstr s) { e |
            continue :: local_return;
            if e.is(.Directory) {
                skip := @const_slice(".git", "target");
                if(s == "." && skip.contains(e.name), => continue());
                skip := @const_slice(".", "..", "node_modules", "tracy", "cimgui", "test_wasm_rt");
                if(skip.contains(e.name), => continue());
                
                dirs&.push(@tfmt("%/%", s, e.name));
            } else {
                for extensions { ext |
                    if e.name.ends_with(ext) {
                        path := @tfmt("%/%", s, e.name);
                        if(path == "./examples/parsegen/boot.g.fr", => continue());
                        files&.push(path);
                        continue();
                    }
                }
            }
        }) || @panic("walk dir '%' failed", s);
        Sort :: import("@/lib/sort.fr");
        sort :: Sort'quicksort(Str, Sort.order_strings);
        sort(files.items().rest(prev_f));
        sort(dirs.items().rest(prev_d));
    };
    files.items()
}

    
#use("@/lib/sys/fs.fr", "@/examples/testing.fr");
