// https://www.asprs.org/wp-content/uploads/2019/07/LAS_1_4_r15.pdf

/*
"All data are in little-endian format." (so we don't have to byteswap everything). 

Important to note that while it looks like the table is just describing a c struct, 
they don't want you to put alignment padding between the fields. they're all just 
packed next to each other so you have to be careful to adding #align(1) annotatations. 
this is a really annoying way of defining a binary format. none of the object file formats have this problem. 
like your only goal should be to be unambiguous and fast to parse which means just letting me cast the bytes to a struct. 
TODO: maybe i should allow #packed on the whole struct so you don't have to put #align on each individual field. 
*/

Header :: @struct {
    fourcc: u32;
    file_source_id: u16;
    global_encoding: u16;
    project_id: Array(u8, 4+2+2+8);  // alignment works out
    version_major: u8;
    version_minor: u8;
    system_generating: Array(u8, 64);
    day: u16;
    year: u16;
    header_size: u16;
    offset_to_point_data: u32;
    vlr_count: u32;
    point_record_format: u8;
    point_record_length: u16 #align(1);
    legacy_point_record_count: u32 #align(1);
    legacy_point_record_count_by_return: Array(u32, 5) #align(1);
    x_scale: f64 #align(1);
    y_scale: f64 #align(1);
    z_scale: f64 #align(1);
    x_offset: f64 #align(1);
    y_offset: f64 #align(1);
    z_offset: f64 #align(1);
    x_max: f64 #align(1);
    y_max: f64 #align(1);
    z_max: f64 #align(1);
    x_min: f64 #align(1);
    y_min: f64 #align(1);
    z_min: f64 #align(1);
    start_of_waveform_record: u64 #align(1);
    
    // The fields below are valid starting version 1.4
    start_of_first_extended: u64 #align(1);
    extended_count: u32 #align(1);
    point_record_count: u64 #align(1);
    point_record_count_by_return: Array(u64, 15) #align(1);
}

PointFormat :: @struct {
    _0 :: @struct {
        x: u32;
        y: u32;
        z: u32;
        intensity: u16;
        flags: u8;
        class: u8;
        scan_angle_rank: i8;
        user_data: u8;
        point_source_id: u16;
    }
    _1 :: @struct {
        base: _0 #use;
        gps_time: f64 #align(1);
    }
}
