// https://www.sigbus.info/n1570#7.1.2
// https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/idx/head.html

float :: """
    #pragma once
    
    #define DECIMAL_DIG 21
    #define FLT_EVAL_METHOD 0 // C11 5.2.4.2.2p9
    #define FLT_RADIX 2
    #define FLT_ROUNDS 1      // C11 5.2.4.2.2p8: to nearest
    
    #define FLT_DIG 6
    #define FLT_EPSILON 0x1p-23
    #define FLT_MANT_DIG 24
    #define FLT_MAX 0x1.fffffep+127
    #define FLT_MAX_10_EXP 38
    #define FLT_MAX_EXP 128
    #define FLT_MIN 0x1p-126
    #define FLT_MIN_10_EXP -37
    #define FLT_MIN_EXP -125
    #define FLT_TRUE_MIN 0x1p-149
    
    #define DBL_DIG 15
    #define DBL_EPSILON 0x1p-52
    #define DBL_MANT_DIG 53
    #define DBL_MAX 0x1.fffffffffffffp+1023
    #define DBL_MAX_10_EXP 308
    #define DBL_MAX_EXP 1024
    #define DBL_MIN 0x1p-1022
    #define DBL_MIN_10_EXP -307
    #define DBL_MIN_EXP -1021
    #define DBL_TRUE_MIN 0x0.0000000000001p-1022
    
    #define LDBL_DIG 15
    #define LDBL_EPSILON 0x1p-52
    #define LDBL_MANT_DIG 53
    #define LDBL_MAX 0x1.fffffffffffffp+1023
    #define LDBL_MAX_10_EXP 308
    #define LDBL_MAX_EXP 1024
    #define LDBL_MIN 0x1p-1022
    #define LDBL_MIN_10_EXP -307
    #define LDBL_MIN_EXP -1021
    #define LDBL_TRUE_MIN 0x0.0000000000001p-1022
""";

stdalign :: """
    #pragma once
    #define alignas _Alignas
    #define alignof _Alignof
    #define __alignas_is_defined 1
    #define __alignof_is_defined 1
""";

stdarg :: """
    #pragma once
    // TODO: this is arm64-apple specific. needs to be up to 4 longs for other platforms. 
    //       but you can't just make it the largest size if you want to pass it by value to other people's libc. 
    typedef struct { long __opaque[1]; } va_list;  
    #define va_start(ap, ...) __builtin_va_start(&ap)
    #define va_end(ap)
    #define va_arg(ap, ty)  __builtin_va_arg(&ap, ty)
    #define va_copy(dest, src) ((dest) = (src))
""";

stdbool :: """
    #pragma once
    #define bool _Bool
    #define true 1
    #define false 0
    #define __bool_true_false_are_defined 1
""";

stddef :: """
    #pragma once
    
    #define NULL ((void *)0)
    
    typedef unsigned long size_t;
    typedef long ptrdiff_t;
    typedef unsigned int wchar_t;
    typedef long max_align_t;
    
    #define offsetof(type, member) ((size_t)&(((type *)0)->member))
""";

stdnoreturn :: """
    #pragma once
    #define noreturn _Noreturn
""";

limits :: """
    #pragma once
    
    #define __2sMIN(max) ((-max)-1)
    
    #define INT8_MAX   127
    #define INT16_MAX  32767
    #define INT32_MAX  9223372036854775807L
    #define INT64_MAX  9223372036854775807LL
    
    #define UINT8_MAX  255
    #define UINT16_MAX 65535
    #define UINT32_MAX 4294967295U
    #define UINT64_MAX 18446744073709551615ULL
    
    #define INT8_MIN   __2sMIN(INT8_MAX)
    #define INT16_MIN  __2sMIN(INT16_MAX)
    #define INT32_MIN  __2sMIN(INT32_MAX)
    #define INT64_MIN  __2sMIN(INT64_MAX)
    
    #define SCHAR_MIN  INT8_MIN
    #define SCHAR_MAX  INT8_MAX
    #define UCHAR_MAX  UINT8_MAX
    #define CHAR_MIN   INT8_MIN
    #define CHAR_MAX   INT8_MAX
    #define SHRT_MIN   INT16_MIN
    #define SHRT_MAX   INT16_MAX
    #define USHRT_MAX  UINT16_MAX
    #define INT_MIN    INT32_MIN
    #define INT_MAX    INT32_MAX
    #define UINT_MAX   UINT32_MAX
    #define LONG_MIN   INT64_MIN
    #define LONG_MAX   INT64_MAX
    #define ULONG_MAX  UINT64_MAX
    #define LLONG_MIN  INT64_MIN
    #define LLONG_MAX  INT64_MAX
    #define ULLONG_MAX UINT64_MAX
    #define SIZE_MAX   UINT64_MAX
    
    #define CHAR_BIT   8
    #define MB_LEN_MAX 4 /* TODO? */
""";

stdint :: """
    #pragma once
    typedef char  int8_t;
    typedef short int16_t;
    typedef int   int32_t;
    typedef long  int64_t;
    typedef unsigned char  uint8_t;
    typedef unsigned short uint16_t;
    typedef unsigned int   uint32_t;
    typedef unsigned long  uint64_t;
    typedef int64_t  intptr_t;
    typedef uint64_t uintptr_t;
    // TODO: there are more

""";

string :: """
    #pragma once
    
    void *memmove(void *dest, void *src, size_t n);
    void *memset(void *s, int c, size_t n);
    void *memcpy(void *dest, void *src, size_t n);
    int   memcmp(void *s1, void *s2, size_t n);
    
    int    strcmp(char *s1, char *s2);
    int    strncmp(char *s1, char *s2, size_t n);
    size_t strlen(char *s);
    char  *strcpy(char *dest, char *src);
    
    char *strerror(int e);
// TOOD
""";

signal :: """
    #pragma once
    typedef int sig_atomic_t;
    
    // TODO
    //SIG_DFL
    //SIG_ERR
    //SIG_IGN
    
    // TODO
    //SIGABRT 
    //SIGFPE
    //SIGILL
    //SIGINT
    //SIGSEGV
    //SIGTERM
""";

stdlib :: """
    #pragma once
    #include <stddef.h>
    #include <limits.h>
    
    void *calloc(size_t nmemb, size_t size);
    void free(void *ptr);
    void *malloc(size_t size);
    void *realloc(void *ptr, size_t size);
    
    long strtol(const char *nptr, char **endptr, int base);
// TOOD
""";

errno :: """
    #pragma once
    
    // TODO: macos specific?
    extern int * __error(void);
    #define errno (*__error())
    
    // TODO: macos specific?
    #define EINTR 4 
    // TODO
""";

inttypes :: """
    #pragma once
    #include <stdint.h>
    
    #define PRId32 "d"
    #define PRIdLEAST32 "d"
    #define PRIdFAST32 "d"
    #define PRIi32 "i"
    #define PRIiLEAST32 "i"
    #define PRIiFAST32 "i"
    #define PRIo32 "o"
    #define PRIoLEAST32 "o"
    #define PRIoFAST32 "o"
    #define PRIu32 "u"
    #define PRIuLEAST32 "u"
    #define PRIuFAST32 "u"
    #define PRIx32 "x"
    #define PRIxLEAST32 "x"
    #define PRIxFAST32 "x"
    #define PRIX32 "X"
    #define PRIXLEAST32 "X"
    #define PRIXFAST32 "X"
    
    #define SCNd32 "d"
    #define SCNdLEAST32 "d"
    #define SCNdFAST32 "d"
    #define SCNi32 "i"
    #define SCNiLEAST32 "i"
    #define SCNiFAST32 "i"
    #define SCNo32 "o"
    #define SCNoLEAST32 "o"
    #define SCNoFAST32 "o"
    #define SCNu32 "u"
    #define SCNuLEAST32 "u"
    #define SCNuFAST32 "u"
    #define SCNx32 "x"
    #define SCNxLEAST32 "x"
    #define SCNxFAST32 "x"
    
    #define PRId64 "lld"
    #define PRIi64 "lli"
    #define PRIo64 "llo"
    #define PRIu64 "llu"
    #define PRIx64 "llx"
    #define PRIX64 "llX"
""";

stdio :: """
    #pragma once
   
    int printf(char *format, ...); 
    
    typedef struct {} FILE;
    int fflush(FILE *stream);
    int	fprintf(FILE *stream, char *fmt, ...);
    int snprintf(char *buf, size_t len, char *fmt, ... );
    FILE *fopen(char *path, char* mode);
    size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);
    int fclose(FILE *stream);
    int feof(FILE *stream);
    int ferror(FILE *stream);
    void clearerr(FILE *stream);

    // TODO: macos specific?
    extern FILE *__stdinp;
    extern FILE *__stdoutp;
    extern FILE *__stderrp;
    #define	stdin __stdinp
    #define	stdout __stdoutp
    #define	stderr __stderrp
""";

sys :: @struct {
time :: """
    #pragma once
    #include <sys/types.h>

    struct timeval {
        time_t      tv_sec;
        suseconds_t tv_usec;
    };
    
    int gettimeofday(struct timeval *, void *);
""";

types :: """
    #pragma once

    typedef long   time_t;
    typedef time_t suseconds_t;
""";
};

unistd :: """
    #pragma once
    
    // TODO: macos specific?
    #define F_OK 0
    #define X_OK (1<<0)
    #define W_OK (1<<1)
    #define R_OK (1<<2)
    int access(char *path, int mode);
    
    char *getcwd(char *buf, size_t len);
    int chdir(char* path);
    // TODO
""";
