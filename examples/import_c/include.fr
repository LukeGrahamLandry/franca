float :: """
    #pragma once
    
    #define DECIMAL_DIG 21
    #define FLT_EVAL_METHOD 0 // C11 5.2.4.2.2p9
    #define FLT_RADIX 2
    #define FLT_ROUNDS 1      // C11 5.2.4.2.2p8: to nearest
    
    #define FLT_DIG 6
    #define FLT_EPSILON 0x1p-23
    #define FLT_MANT_DIG 24
    #define FLT_MAX 0x1.fffffep+127
    #define FLT_MAX_10_EXP 38
    #define FLT_MAX_EXP 128
    #define FLT_MIN 0x1p-126
    #define FLT_MIN_10_EXP -37
    #define FLT_MIN_EXP -125
    #define FLT_TRUE_MIN 0x1p-149
    
    #define DBL_DIG 15
    #define DBL_EPSILON 0x1p-52
    #define DBL_MANT_DIG 53
    #define DBL_MAX 0x1.fffffffffffffp+1023
    #define DBL_MAX_10_EXP 308
    #define DBL_MAX_EXP 1024
    #define DBL_MIN 0x1p-1022
    #define DBL_MIN_10_EXP -307
    #define DBL_MIN_EXP -1021
    #define DBL_TRUE_MIN 0x0.0000000000001p-1022
    
    #define LDBL_DIG 15
    #define LDBL_EPSILON 0x1p-52
    #define LDBL_MANT_DIG 53
    #define LDBL_MAX 0x1.fffffffffffffp+1023
    #define LDBL_MAX_10_EXP 308
    #define LDBL_MAX_EXP 1024
    #define LDBL_MIN 0x1p-1022
    #define LDBL_MIN_10_EXP -307
    #define LDBL_MIN_EXP -1021
    #define LDBL_TRUE_MIN 0x0.0000000000001p-1022
""";

stdalign :: """
    #pragma once
    #define alignas _Alignas
    #define alignof _Alignof
    #define __alignas_is_defined 1
    #define __alignof_is_defined 1
""";

stdarg :: """
    #pragma once
    // TODO: this is arm64-apple specific. needs to be up to 4 longs for other platforms. 
    //       but you can't just make it the largest size if you want to pass it by value to other people's libc. 
    typedef struct { long __opaque[1]; } va_list;  
    #define va_start(ap, ...) __builtin_va_start(&ap)
    #define va_end(ap)
    #define va_arg(ap, ty)  __builtin_va_arg(&ap, ty)
    #define va_copy(dest, src) ((dest) = (src))
""";

stdbool :: """
    #pragma once
    #define bool _Bool
    #define true 1
    #define false 0
    #define __bool_true_false_are_defined 1
""";

stddef :: """
    #pragma once
    
    #define NULL ((void *)0)
    
    typedef unsigned long size_t;
    typedef long ptrdiff_t;
    typedef unsigned int wchar_t;
    typedef long max_align_t;
    
    #define offsetof(type, member) ((size_t)&(((type *)0)->member))
""";

stdnoreturn :: """
    #pragma once
    #define noreturn _Noreturn
""";

limits :: """
    #define CHAR_BIT 8
    #define SCHAR_MIN -128
    #define SCHAR_MAX 127
    #define UCHAR_MAX 255
    #define CHAR_MIN SCHAR_MIN
    #define CHAR_MAX SCHAR_MAX
    #define MB_LEN_MAX 4 /* TODO? */
    #define SHRT_MIN -32768
    #define SHRT_MAX 32767
    #define USHRT_MAX 65535
    #define INT_MIN -2147483648
    #define INT_MAX 2147483647
    #define UINT_MAX 4294967295
    #define LONG_MIN -9223372036854775808
    #define LONG_MAX 9223372036854775807
    #define ULONG_MAX 18446744073709551615
    #define LLONG_MIN LONG_MIN
    #define LLONG_MAX LONG_MAX
    #define ULLONG_MAX ULONG_MAX
""";

stdint :: """
    typedef char int8_t;
    typedef short int16_t;
    typedef int int32_t;
    typedef long int64_t;
    typedef unsigned char uint8_t;
    typedef unsigned short uint16_t;
    typedef unsigned int uint32_t;
    typedef unsigned long uint64_t;
    typedef int64_t intptr_t;
    typedef uint64_t uintptr_t;
    // TODO: there are more
""";

string :: """
// TOOD
""";

signal :: """
    typedef int sig_atomic_t;
    
    // TODO
    //SIG_DFL
    //SIG_ERR
    //SIG_IGN
    
    // TODO
    //SIGABRT 
    //SIGFPE
    //SIGILL
    //SIGINT
    //SIGSEGV
    //SIGTERM
""";
