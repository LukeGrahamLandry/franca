
// Consumes the current token if it matches `op`.
fn consume(rest: **Token, tok: *Token, str: Str) bool = {
    b := equal(tok, str);
    rest[] = if(b, => tok.next, => tok);
    b
}

fn equal(tok: *Token, op: Str) bool = 
    tok.str() == op;
    
// Ensure that the current token is `op`.
fn skip(tok: *Token, op: Str) *Token = {
    if !equal(tok, op) {
        error_tok(tok, "expected '%s'", op);
    };
    tok.next
}
