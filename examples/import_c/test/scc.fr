main :: fn() void = {
    println(compile_with_scc("""
    int strcmp(char *s1, char *s2) {
    	while (*s1 && *s2 && *s1 == *s2)
     		++s1, ++s2;
     	return *(unsigned char *)s1 - *(unsigned char *)s2;
     }""", "4a695da3a6e31f002608accb745d4369fe7f0eaa"));
};

compile_with_scc :: fn(source: Str, scc_commit: Str) Str = {
    root := (import().examples.import_c.test.qbe.fetch_git_commit)(scc_commit, "scc", "git://git.simple-cc.org/scc");
    
    cc1_files := collect_with_extension(@tfmt("%/cc1", root), ".c").unwrap();
    lib_files := collect_with_extension(@tfmt("%/lib", root), ".c").unwrap();
    
    files := Str.list(temp());
    for(cc1_files, fn(it) => files&.push(@tfmt("cc1/%", it)));
    for(lib_files, fn(it) => files&.push(@tfmt("lib/%", it)));
    files&.push("cc1/arch/qbe/arch.c");
    
    write_entire_file_or_crash(@tfmt("%/inc/sysincludes.h", root), read_entire_file_or_crash(temp(), @tfmt("%/inc/sysincludes.def.h", root)));
    
    CC :: import("@/examples/import_c/cc.fr");
    target: CC.Qbe.QbeTargetEnv = (arch = query_current_arch(), os = query_current_os(), type = .Exe);
    src := """
        #define ARCH "qbe"
        #define PREFIX "install"
        
        // they use this as an identifier but it's a keyword in C23
        // TODO: i could let you specify that you only want c99?
        #define typeof typeof__ 
    """.clone(temp());
    
    includes := @slice(root, @tfmt("%/inc/c99", root));
    each includes { it |
        @fmt(src&, "#add_include_path \"%\"\n", it);
    };
    @fmt(src&, "#define __BASE_FILE__ \"%\"\n", files[0]);
    i := 0;
    each files { it |
        @fmt(src&, "#include \"%\"\n", it);
        @fmt(src&, "#discard_static_scope\n");
    };
    
    output_path := "target/franca/scc_cc1.out";
    or CC'compile(src.items(), target, "", output_path) { err |
        @panic("%", err);
    };
    
    // TODO
    ""
};
