/// Here we convert BF to a string of franca source code (at comptime), 
/// and then import that string as a callable function. 

fn to_source(code: Str) []u8 = {
    out := u8.list(code.len * 5, temp()); 
	
	for code { c | @switch(@as(Bf) c) {
        @case(.Inc)    => out&.push_all("p[]+=1;");
        @case(.Dec)    => out&.push_all("p[]-=1;");
        @case(.Right)  => out&.push_all("p=p.offset(1);");
        @case(.Left)   => out&.push_all("p=p.offset(-1);");
        @case(.Output) => out&.push_all("putchar_UNBUFFERED(p[]);");
        @case(.Input)  => out&.push_all("p[]=getchar_UNBUFFERED();");
        @case(.Open)   => out&.push_all("while=>p[]!=0{|");
        @case(.Close)  => out&.push_all("};");
        @default()     => ();
    }};

	out.items()
}

fn to_function($src: []u8) (@Fn(mem: *u8) void) = 
    import(@tfmt("{ f :: fn(p: *u8) void = { % }; };", to_source(src))).f;

print_hello_world :: to_function(HELLO_WORLD);

main :: fn() void = {
    mem := temp().alloc_zeroed(u8, 30000);
    print_hello_world(mem.ptr);
};

#use("@/examples/bf/README.fr");
::enum(Bf);
