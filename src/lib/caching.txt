@ser @deser
struct ModuleCache = {
    version: u64 = 1,
    projects: SlotMap(Project),
    entries: SlotMap(CacheEntry),
}

struct Project = {
    path: Path,
    last_build: TimeStamp,
}

struct FullModId = { interface: ModId, impl: ModId };

struct CacheEntry = {
    index: u64,
    id: FullModId,
    input: ContentHash,
    output: ContentHash,
    i_depend_on: SlotMap(u64),
    depend_on_me: SlotMap(u64),
    created: Timestamp,
};

// An array with holes so indexes are stable. 
struct SlotMap(T) = []?T;

const CacheKey = []Symbol;

// Directories like cache_root/<hash[0]>/<hash>/<key>/<whatever_files>

fn load_cache(root: Path) ModuleCache;

fn get(cache: &ModuleCache, FullModId) = Handle;
