
fn lsp_main(vtable: *ImportVTable) void = {
    eprintln("Franca Language Server.");
    input_buf: List(u8) = list(65536, page_allocator);
    
    STD_IN: Fd : (fd = 0.intcast());
    while => true {|
        continue :: local_return;
        input_buf&.clear();
        got := read(STD_IN, input_buf.maybe_uninit.ptr, input_buf.maybe_uninit.len);
        input_buf.len = got.unwrap();
        if(input_buf.is_empty(), => continue());
        
        @eprintln("%", input_buf.len);
        msg := input_buf.items();
        dowhile() {|
            (line, rest) := msg.eat_line();
            msg = rest;
            @eprintln("%\n===", line);
            rest.len > 0
        };
        reset_temporary_storage();
    };
}

fn eat_line(s: Str) Ty(Str, Str) = {
    start := s;
    start.len = 0;
    while => !s.starts_with("\r\n") && s.len > 0 {|
        start.len += 1;
        s&.advance();
    };
    if s.len > 0 {|
        s&.advance();
        s&.advance();
    };
    (start, s)
}

fn advance(s: *Str) void = {
    s.ptr = s.ptr.offset(1);
    s.len -= 1;
}
