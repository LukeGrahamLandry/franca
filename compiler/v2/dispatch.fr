Task :: @struct(
    action: Action,
    waiting_for: List(TaskId),
);

TaskId :: @struct(id: i64);

Action :: @tagged(
    CompileExpr: FatExpr,
    EvalExpr: FatExpr,
    TypeHeader: FuncId,
    CompileBody: FuncId,
    TypeConstant: Var,
    EvalConstant: Var,
    EvalFunc: FuncId,
    EmitBc: FuncId,
    EmitJitAsm: FuncId,
);

fn Maybe($T: Type) Type = {
    Self :: @tagged(
        Ok: T,
        Err: *ParseErr,
        Suspend: *Action,
    );
    ::tagged(Self);
    Self
}

fn poll_tasks(self: *SelfHosted) Result(bool, *ParseErr) = {
    for self.pending_tasks { task |
        @match(task) {
        };
    };
}

