fn RawDeque($T: Type) Type = {
    Self :: @struct(head := 0, tail := 0, items: []T = empty());
    
    fn push_front(self: *Self, t: T, a: Alloc) void = {
        
    }
    
    fn push_back(self: *Self, t: T, a: Alloc) void = {
        
    }
    
    fn pop_front(self: *Self, a: Alloc) ?T = {
        
    }
    
    fn pop_back(self: *Self, a: Alloc) ?T = {
        
    }
    
    fn len(self: *Self) i64 = if self.tail > self.head {
        self.tail - self.head
    } else {
        self.len - self.head + self.tail
    };
    
    Self
}
