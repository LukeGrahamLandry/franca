//! Instruction encoding for wasm32. 
//! Magic numbers from https://webassembly.github.io/spec/core/binary/index.html
//! Abstraction will continue until moral improves. 

FuncIdx :: @struct(id: u32);
TypeIdx :: @struct(id: u32);
TableIdx :: @struct(id: u32);
LabelIdx :: @struct(id: u32);
LocalIdx :: @struct(id: u32);
GlobalIdx :: @struct(id: u32);

wasm_page_size :: 65536;
NumType        :: @enum(u8) (I32 = 0x7F, I64 = 0x7E, F32 = 0x7D, F64 = 0x7C);
BlockType      :: @tagged(Empty: void, Value: u8, Index: i33);
MemArg         :: @struct(offset: u32, align: u32);

Instr :: @enum(u8) (
    Unreachable = 0x00,
    Nop = 0x01,
    Block = 0x02,
    Loop = 0x03,
    If = 0x04,
    Else = 0x05,
    End = 0x0B,
    Br = 0x0C,
    BrIf = 0x0D,
    Return = 0x0F,
    Call = 0x10,
    CallIndirect = 0x11,
    Drop = 0x1A,
    LocalGet = 0x20,
    LocalSet = 0x21,
    LocalTee = 0x22,
    GlobalGet = 0x23,
    GlobalSet = 0x24,
    I64_Load = 0x29,
    F64_Load = 0x2B,
    I64_Store = 0x37,
    F64_Store = 0x39,
    I64_Const = 0x42,
    F64_Const = 0x44,
    I64_Eq = 0x46,
    I64_Add = 0x7C,
);

// TODO: better error message if you use '=' instead of ':'. 
Op :: @tagged(
    Call: FuncIdx,
    CallIndirect: (TypeIdx, TableIdx),
    Br: LabelIdx,
    BrIf: LabelIdx,
    LocalGet: LocalIdx,
    LocalSet: LocalIdx,
    LocalTee: LocalIdx,  // same as local set but returns the value as well
    GlobalGet: GlobalIdx,
    GlobalSet: GlobalIdx,
    I64_Const: i64,
    F64_Const: f64,
    I64_Load: MemArg,
);

// TODO: flip endianness? 
// Note: these are bytes, not LEB128
wasm_magic: u32 : 0x0061736D;
wasm_version: u32 : 0x01000000;

Section :: @enum(u8) (
    Custom = 0,
    Type = 1,
    Import = 2,
    Function = 3,
    Table = 4,
    Memory = 5,
    Global = 6,
    Export = 7,
    Start = 8,
    Element = 9,
    Code = 10,
    Data = 11,
    DataCount = 12, 
);
