// I got bored writing this 4 times (franca, lox, json, asm).
// So heres a clunky generic thing to call. 

skip_whitespace :: fn($peek: @Fn(it: i64) u8 #duplicated, $pop: @Fn() void #duplicated, $slash_star_comments: bool, $slash_slash_comments: bool, unterminated: *bool) i64 = {
    done :: return;
    lines := 0;
    loop {
        @switch(peek(0)) {
            @case(" ".ascii())  => pop();
            @case("\t".ascii()) => pop();
            @case("\r".ascii()) => pop();
            @case("\n".ascii()) => {
                pop();
                lines += 1;
            };
            @case("/".ascii()) => {
                @if(slash_slash_comments || slash_star_comments, {
                    @switch(peek(1)) {
                        @case("/".ascii()) => {
                            @if(slash_slash_comments, {
                                dowhile {
                                    pop();
                                    c := peek(0);
                                    c != 0 && c != "\n".ascii()
                                };
                                lines += 1;
                            }, return(lines));
                        };
                        @case("*".ascii()) => {
                            @if(slash_star_comments, {
                                depth := 1; 
                                pop(); pop();
                                while (=> depth > 0) {
                                    @switch(peek(0)) {
                                        @case("/".ascii()) => {
                                            if peek(1) == "*".ascii() {
                                                depth += 1;
                                                pop();
                                            };
                                        };
                                        @case("*".ascii()) => {
                                            if peek(1) == "/".ascii() {
                                                depth -= 1;
                                                pop();
                                            };
                                        };
                                        // TODO: catch error if you forget the .ascii() rn it just miscompiles. -- Sep 24 :FUCKED
                                        @case("\n".ascii()) => {
                                            lines += 1;
                                        };
                                        @case(0) => {
                                            unterminated[] = true;    
                                            return(lines)
                                        };
                                        @default => ();
                                    };
                                    pop();
                                };
                            }, return(lines));
                        };
                        @default => return(lines);
                    };
                }, return(lines));
            };
            @default => return(lines);
        };
    };
};
