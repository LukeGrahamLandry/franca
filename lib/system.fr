
fun panic(msg: Str) Never = {
    println(msg);
    exit(1)
}

fun println(var msg: Str) Unit = {
    print(msg);
    
    // TODO: extra syscall is sad
    new_line := 10;
    print(@as(Str) (ptr = new_line&, len=1));
}

fn print(var msg: Str) Unit = {
    const STD_OUT: Fd = 1;
    let written: i64 = write(STD_OUT, msg.ptr, @as(usize) msg.len);
    // TODO: check errno. loop if not all written. 
}

fun args() Slice$CStr = {
    argc := _NSGetArgc()[];
    argv := _NSGetArgv()[];
    // Safety: the os wouldn't lie to us... hopefully.
    slice(@as(*CStr) argv, argc)
}

Terminos :: @struct(
    iflag: u64,
    oflag: u64,
    cflag: u64,
    lflag: u64,
    cc: Array(u8, 20),  // TODO: this doesn't work until i have byte sized fields in structs
    ispeed: u64,
    ospeed: u64,
);
