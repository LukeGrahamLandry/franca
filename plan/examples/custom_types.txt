
///////////////
/// Structs ///
///////////////
// 
// tuples
// struct literals
// unique types (`struct` keyword)
//

/////////////
/// Enums ///
/////////////
//
// TagType
// EnumType
// FlagSet
// 
// @match

///////////////
/// Unions ///
//////////////
//

/////////////////////
/// Type Aliasing ///
/////////////////////
//
// Sometimes its helpful to give a snappy name to a complex type without creating a distrinct new type. 
// Since types are comptime values, you can just use `const` to declare a variable that holds a type. 
// You can also use `let` but `const` makes it a compile error if it can't be done at comptime which might catch dumb mistakes sooner. 
// In general its not a big risk since you can't manipulate type values at runtime anyway. 
//
