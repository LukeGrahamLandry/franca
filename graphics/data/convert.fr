// convert c byte arrays to a binary file. 
// EXAMPLE: franca graphics/data/convert.fr graphics/data/debugtext.h > graphics/data/debugtext.bin

fn main() void = {
    input := read_file_from_last_arg();
    i := 0;
    bytes := u8.list(temp());
    while => i < input.len {
        decl := "static const uint8_t ";
        if input.rest(i).starts_with(decl) {
            i += decl.len;
            name_start := i;
            while => input[i] != "[".ascii() {
                i += 1;
            };
            name := input.slice(name_start, i);
            decl := "] = {";
            while => !input.rest(i).starts_with(decl) {
                i += 1;
            };
            i += decl.len;
            first_byte := bytes.len;
            while => input[i] != "}".ascii() {
                continue :: local_return;
                if input[i] == "/".ascii() {
                    @debug_assert(input[i + 1] == "/".ascii(), "expected line comment");
                    while => input[i] != "\n".ascii() {
                        i += 1;
                    };
                    continue()
                };
                if input.rest(i).starts_with("0x") {
                    a, b := (hex_digit(input[i + 2]).unwrap(), hex_digit(input[i + 3]).unwrap());
                    i += 4;
                    bytes&.push(a.shift_left(4).bit_or(b));
                    continue()
                };
                i += 1;
            };
            @eprintln("% :: data.slice(%, %);", name, first_byte, bytes.len);
        } else {
            i += 1;
        };
    };
    print(bytes.items());
}
